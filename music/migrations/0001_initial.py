# Generated by Django 4.1.1 on 2023-01-23 17:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArtistType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='Artist Type Name')),
                ('selecta', models.BooleanField(default=False, verbose_name='Selecta (DJ, CDJ etc.) = true')),
                ('vocalist', models.BooleanField(default=False, verbose_name='Vocalist (MC; Singer; Beatbox etc.) = true')),
                ('instrumentalist', models.BooleanField(default=False, verbose_name='Instrumentist (including electronic) = True')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='Musical Genre Name')),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='Label Name')),
                ('location', models.CharField(blank=True, max_length=250, null=True, verbose_name='Label location')),
                ('contact_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Label contact')),
                ('contact_phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Label phone number')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Label email')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Label web address')),
                ('created_dt', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('edited_dt', models.DateTimeField(auto_now=True, verbose_name='Date edited')),
            ],
        ),
        migrations.CreateModel(
            name='Producer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='Producer Name')),
                ('producer_location', models.CharField(blank=True, max_length=100, null=True, verbose_name='Producer Location')),
                ('producer_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Producer Email')),
                ('producer_url', models.URLField(blank=True, null=True, verbose_name='Producer Website')),
                ('created_dt', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('edited_dt', models.DateTimeField(auto_now=True, verbose_name='Date edited')),
            ],
        ),
        migrations.CreateModel(
            name='Studio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='Studio Name')),
                ('location', models.CharField(blank=True, max_length=250, null=True, verbose_name='Studio location')),
                ('contact_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Studio contact')),
                ('contact_phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Studio phone number')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Studio email')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Studio web address')),
                ('created_dt', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('edited_dt', models.DateTimeField(auto_now=True, verbose_name='Date edited')),
            ],
        ),
        migrations.CreateModel(
            name='Soundsystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='Sound Name')),
                ('rank', models.IntegerField(verbose_name='Sound rank')),
                ('location', models.CharField(blank=True, max_length=250, null=True, verbose_name='Location')),
                ('contact_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Contact')),
                ('contact_phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Contact phone number')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('sound_url', models.URLField(blank=True, null=True, verbose_name='weblink')),
                ('created_dt', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('edited_dt', models.DateTimeField(auto_now=True, verbose_name='Date edited')),
                ('genre', models.ManyToManyField(related_name='sound_genre', to='music.genre')),
            ],
            options={
                'ordering': ['rank', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Band',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='Band name')),
                ('rank', models.IntegerField(verbose_name='rank: Headline is low number')),
                ('location', models.CharField(blank=True, max_length=250, null=True, verbose_name='Location')),
                ('contact_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Contact')),
                ('contact_phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Contact phone number')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('band_url', models.URLField(blank=True, null=True, verbose_name='website')),
                ('created_dt', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('edited_dt', models.DateTimeField(auto_now=True, verbose_name='Date edited')),
                ('genre', models.ManyToManyField(related_name='group_genre', to='music.genre')),
            ],
            options={
                'ordering': ['rank', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='Artist Name')),
                ('rank', models.IntegerField(verbose_name='rank: Headline is low number')),
                ('location', models.CharField(blank=True, max_length=100, null=True, verbose_name='Artist Location')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Artist Email')),
                ('artist_url', models.URLField(blank=True, null=True, verbose_name='Artist Website')),
                ('created_dt', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('edited_dt', models.DateTimeField(auto_now=True, verbose_name='Date edited')),
                ('artist_type', models.ManyToManyField(related_name='artist_type', to='music.artisttype')),
                ('band', models.ManyToManyField(related_name='artist_bands', to='music.band')),
                ('crew', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='music.soundsystem')),
                ('genre', models.ManyToManyField(related_name='artist_genre', to='music.genre')),
            ],
            options={
                'ordering': ['rank', 'name'],
            },
        ),
    ]
